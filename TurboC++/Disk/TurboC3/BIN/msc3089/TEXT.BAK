#include<stdio.h>
#include<conio.h>
#include<graphics.h>
#include<math.h>
#include<stdlib.h>
float x,y,df_x[10],df_y[10],top,cw,ch,char_sep,x_charsep,y_charsep;
float df_penx,df_peny,frame_penx,frame_peny;
float op,df_op[10],w,h,ws,we,hs,he,erase_flag;
char cha;
void initialize()
{
	cw=0.2;
	ch=0.2;
	char_sep=0.1;
	ws=0;
	we=639;
	hs=0;
	he=479;
	w=we-ws;
	h=he-hs;
	df_penx=0;
	df_peny=0;
	frame_penx=0;
	frame_peny=0;
	top=0;
	erase_flag=0;
}
float max1(float a,float b)
{
	if(a>b)
		return a;
	else
		return b;
}
float min1(float a,float b)
{
	if(a<b)
		return a;
	else
		return b;
}
void bres(int xa,int ya,int xb,int yb)
{
	int dx,dy,p,twody,twodydx,twodx,twodxdy,xend,yend,x1,y1;
	float m;
	dx=abs(xa-xb);
	dy=abs(ya-yb);
	if(dx>dy)
	{
		if(dx==0)
		{
			m=(float)dy;
		}
		else
		{
			m=(float)(yb-ya)/(float)(xb-xa);
		}
		p=(2*dy)-dx;
		twody=2*dy;
		twodydx=2*(dy-dx);
		if(xa>xb)
		{
			x1=xb;
			y1=yb;
			xend=xa;
		}
		else
		{
			x1=xa;
			y1=ya;
			xend=xb;
		}
		putpixel(x1,y1,RED);
		while(x1<xend)
		{
			x1++;
			if(p<0)
			{
				p+=twody;
			}
			else
			{
				if(m>0 && m<1)
				{
					y1++;
				}
				else if(m<0 && m>-1)
				{
					y1--;
				}
				p+=twodydx;
			}
			putpixel(x1,y1,RED);
		}
	}
	else
	{
		if(dx==0)
		{
			m=(float)dy;
		}
		else
		{
			m=(float)(yb-ya)/(float)(xb-xa);
		}
		p=(2*dx)-dy;
		twodx=2*dx;
		twodxdy=2*(dx-dy);
		if(ya>yb)
		{
			x1=xb;
			y1=yb;
			yend=ya;
		}
		else
		{
			x1=xa;
			y1=ya;
			yend=yb;
		}
		putpixel(x1,y1,RED);
		while(y1<yend)
		{
			y1++;
			if(p<0)
			{
				p+=twodx;
			}
			else
			{
				if(m>=1)
				{
					x1++;
				}
				else if(m<=-1)
				{
					x1--;
				}
				p+=twodxdy;
			}
			putpixel(x1,y1,RED);
		}
	}
}
void putpoint(float op,float x,float y)
{
	if(top>9)
	{
		printf("\nerror");
	}
	else
	{
		df_op[top]=op;
		df_x[top]=x;
		df_y[top]=y;
		top++;
	}
}
void getpoint(float n)
{
	op=df_op[n];
	x=df_x[n];
	y=df_y[n];
}
void d_f_e(float op)
{
	putpoint(op,df_penx,df_peny);
}
void move_abs(float x,float y)
{
	df_penx=x;
	df_peny=y;
	d_f_e(1);
}
void move_rel(float x,float y)
{
	df_penx+=x;
	df_peny+=y;
	d_f_e(1);
}
void line_abs(float x,float y)
{
	df_penx=x;
	df_peny=y;
	d_f_e(2);
}
void line_rel(float x,float y)
{
	df_penx+=x;
	df_peny+=y;
	d_f_e(2);
}
void domove(float x,float y)
{
	float a = (x*w)+ws;
	float b = (y*h)+hs;
	frame_penx=max1(ws,min1(we,a));
	frame_peny=max1(hs,min1(he,b));
}
void doline(float x,float y)
{
	float tempx=frame_penx;
	float tempy=frame_peny;
	float a = (x*w)+ws;
	float b = (y*h)+hs;
	frame_penx=max1(ws,min1(we,a));
	frame_peny=max1(hs,min1(he,b));
	bres((int)(tempx+0.5),(int)(tempy+0.5),(int)(frame_penx+0.5),(int)(frame_peny+0.5));
}
void geth(float x1,float y1)
{
	int i,j;
	float z;
	int arrh[10][10]={
	{1,1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1,1},
	{0,0,0,1,1,1,1,0,0,0},
	{0,0,0,1,1,1,1,0,0,0},
	{0,0,0,1,1,1,1,0,0,0},
	{0,0,0,1,1,1,1,0,0,0},
	{0,0,0,1,1,1,1,0,0,0},
	{0,0,0,1,1,1,1,0,0,0},
	{1,1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1,1}
	};
	z=y1;
	for(i=0;i<10;i++)
	{
		y1=z;
		for(j=0;j<10;j++)
		{
			if(arrh[i][j]==1)
			{
				putpixel(x1,y1,RED);
			}
			y1++;
		}
		x1++;
	}

}
void gete(float x1,float y1)
{
	int i,j;
	float z;
	int arre[10][10]={
	{1,1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1,1},
	{1,1,1,0,0,0,0,1,1,1},
	{1,1,1,0,0,0,0,1,1,1},
	{1,1,1,0,0,0,0,1,1,1},
	{1,1,1,0,0,0,0,1,1,1},
	{1,1,1,0,0,0,0,1,1,1},
	{1,1,1,0,0,0,0,1,1,1},
	{1,1,1,1,1,1,1,1,1,1},
	{1,1,1,1,1,1,1,1,1,1}
	};
       z=y1;
	for(i=0;i<10;i++)
	{
		y1=z;
		for(j=0;j<10;j++)
		{
			if(arre[i][j]==1)
			{
				putpixel(x1,y1,RED);
			}
			y1++;
		}
		x1++;
	}

}
void dochar(float x,float y)
{
	float a,b;
	op=-1*op;
	cha=op;
	 a = (x*w)+ws;
	 b = (y*h)+hs;
	frame_penx=max1(ws,min1(we,a));
	frame_peny=max1(hs,min1(he,b));
	switch(cha)
	{
		case 'h':
			geth(frame_penx,frame_peny);
			break;
		case 'e':
			gete(frame_penx,frame_peny);
			break;
		default:
			printf("wrong");
	}

}
void interprete(int start,int count)
{
	float i;
	for(i=start;i<=count;i++)
	{
		getpoint(i);
		if(op==1)
			domove(x,y);
		else if(op==2)
			doline(x,y);
		else if(op<=-31 && op>=-127)
			dochar(x,y);
		else
			printf("\nWrong");
	}
}
void char_up(float dx,float dy)
{
	float s = sqrt(pow(dx,2)+pow(dy,2));
	float ds = ((cw*dy)+(ch*dx))/s;
	float ts = ds*(0.1+char_sep);
	x_charsep = ts*(dy/s);
	y_charsep = ts*(dx/s);
}
void text(char c[])
{
	int len = strlen(c);
	int i;
	float tempx,tempy;
	tempx=df_penx;
	tempy=df_peny;
	for(i=0;i<len;i++)
	{
		cha = c[i];
		op = (int)cha;
		op=-op;
		d_f_e(op);
		df_penx+=x_charsep;
		df_peny+=y_charsep;
	}
	move_abs(tempx,tempy);
}
void new_frame()
{
	erase_flag=1;
}
void erase()
{
	int i,j;
	for(i=0;i<=639;i++)
	{
		for(j=0;j<=479;j++)
		{
			putpixel(i,j,0);
		}
	}
}
/*void m_p_c()
{
	if(erase_flag==0)
	{
		erase();
		erase_flag=1;
	}
	if(top>0)
	{
		interprete(0,(top-1));
		top=0;
	}
} */
/*void house()
{
	line_rel(0.0,0.3);
	line_rel(-0.2,0.0);
} */
void main()
{
	int gd=DETECT,gm;
	char c[]="he";
	clrscr();
	initgraph(&gd,&gm,"c:/turboc3/bgi");
	initialize();
	char_up(1,1);
	text(c);
    //	char_up(1,1);
    //	text(c);
    //	char_up(0,1);
    //	text(c);
	m_p_c();
	getch();
}